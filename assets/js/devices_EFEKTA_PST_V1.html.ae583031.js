"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[73274],{45333:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>o,data:()=>s});var r=a(6254);const i={},o=(0,a(58079).A)(i,[["render",function(e,t){const a=(0,r.g2)("RouteLink");return(0,r.uX)(),(0,r.CE)("div",null,[t[8]||(t[8]=(0,r.Lk)("h1",{id:"efekta-efekta-pst-v1",tabindex:"-1"},[(0,r.Lk)("a",{class:"header-anchor",href:"#efekta-efekta-pst-v1"},[(0,r.Lk)("span",null,"EFEKTA EFEKTA_PST_V1")])],-1)),(0,r.Lk)("table",null,[t[6]||(t[6]=(0,r.Lk)("thead",null,[(0,r.Lk)("tr",null,[(0,r.Lk)("th"),(0,r.Lk)("th")])],-1)),(0,r.Lk)("tbody",null,[t[2]||(t[2]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Model"),(0,r.Lk)("td",null,"EFEKTA_PST_V1")],-1)),(0,r.Lk)("tr",null,[t[1]||(t[1]=(0,r.Lk)("td",null,"Vendor",-1)),(0,r.Lk)("td",null,[(0,r.bF)(a,{to:"/supported-devices/#v=EFEKTA"},{default:(0,r.k6)((()=>t[0]||(t[0]=[(0,r.eW)("EFEKTA")]))),_:1})])]),t[3]||(t[3]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Description"),(0,r.Lk)("td",null,"Water, gas smart pressure monitor")],-1)),t[4]||(t[4]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Exposes"),(0,r.Lk)("td",null,"pressure, bar, psi, temperature, pressure_offset, raw_temperature_calibration, raw_temperature, raw_temperature_recalibrated, battery, voltage, battery_low, uptime, reading_interval, smart_sleep, config_report_enable, comparison_previous_data")],-1)),t[5]||(t[5]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Picture"),(0,r.Lk)("td",null,[(0,r.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/EFEKTA_PST_V1.png",alt:"EFEKTA EFEKTA_PST_V1"})])],-1))])]),t[9]||(t[9]=(0,r.Lk)("h2",{id:"options",tabindex:"-1"},[(0,r.Lk)("a",{class:"header-anchor",href:"#options"},[(0,r.Lk)("span",null,"Options")])],-1)),(0,r.Lk)("p",null,[(0,r.Lk)("em",null,[(0,r.bF)(a,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,r.k6)((()=>t[7]||(t[7]=[(0,r.eW)("How to use device type specific configuration")]))),_:1})])]),t[10]||(t[10]=(0,r.Fv)('<ul><li><p><code>pressure_calibration</code>: Calibrates the pressure value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>pressure_precision</code>: Number of digits after decimal point for pressure, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>temperature_calibration</code>: Calibrates the temperature value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>temperature_precision</code>: Number of digits after decimal point for temperature, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="pressure-numeric" tabindex="-1"><a class="header-anchor" href="#pressure-numeric"><span>Pressure (numeric)</span></a></h3><p>Measured pressure value in kPa. Value can be found in the published state on the <code>pressure</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kPa</code>.</p><h3 id="bar-numeric" tabindex="-1"><a class="header-anchor" href="#bar-numeric"><span>Bar (numeric)</span></a></h3><p>Measured pressure value in bar. Value can be found in the published state on the <code>bar</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>bar</code>.</p><h3 id="psi-numeric" tabindex="-1"><a class="header-anchor" href="#psi-numeric"><span>Psi (numeric)</span></a></h3><p>Measured pressure value in psi. Value can be found in the published state on the <code>psi</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>psi</code>.</p><h3 id="temperature-numeric" tabindex="-1"><a class="header-anchor" href="#temperature-numeric"><span>Temperature (numeric)</span></a></h3><p>Measured temperature value. Value can be found in the published state on the <code>temperature</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>Â°C</code>.</p><h3 id="pressure-offset-numeric" tabindex="-1"><a class="header-anchor" href="#pressure-offset-numeric"><span>Pressure offset (numeric)</span></a></h3><p>Adjust first pressure sensor. Value can be found in the published state on the <code>pressure_offset</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pressure_offset&quot;: NEW_VALUE}</code>. The minimal value is <code>-100</code> and the maximum value is <code>100</code>. The unit of this value is <code>kPa</code>.</p><h3 id="raw-temperature-calibration-numeric" tabindex="-1"><a class="header-anchor" href="#raw-temperature-calibration-numeric"><span>Raw temperature calibration (numeric)</span></a></h3><p>Adjust first temperature sensor. Value can be found in the published state on the <code>raw_temperature_calibration</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;raw_temperature_calibration&quot;: NEW_VALUE}</code>. The minimal value is <code>-8192</code> and the maximum value is <code>8192</code>. The unit of this value is <code>raw unit</code>.</p><h3 id="raw-temperature-numeric" tabindex="-1"><a class="header-anchor" href="#raw-temperature-numeric"><span>Raw temperature (numeric)</span></a></h3><p>Sensor raw temperature. Value can be found in the published state on the <code>raw_temperature</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>raw unit</code>.</p><h3 id="raw-temperature-recalibrated-numeric" tabindex="-1"><a class="header-anchor" href="#raw-temperature-recalibrated-numeric"><span>Raw temperature recalibrated (numeric)</span></a></h3><p>Recalibrated sensor raw temperature. Value can be found in the published state on the <code>raw_temperature_recalibrated</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>raw unit</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;battery&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="voltage-numeric" tabindex="-1"><a class="header-anchor" href="#voltage-numeric"><span>Voltage (numeric)</span></a></h3><p>Reported battery voltage in millivolts. Value can be found in the published state on the <code>voltage</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;voltage&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The unit of this value is <code>mV</code>.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Empty battery indicator. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="uptime-numeric" tabindex="-1"><a class="header-anchor" href="#uptime-numeric"><span>Uptime (numeric)</span></a></h3><p>Uptime. Value can be found in the published state on the <code>uptime</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>Hours</code>.</p><h3 id="reading-interval-numeric" tabindex="-1"><a class="header-anchor" href="#reading-interval-numeric"><span>Reading interval (numeric)</span></a></h3><p>Setting the sensor reading interval in seconds, by default 15 seconds. Value can be found in the published state on the <code>reading_interval</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;reading_interval&quot;: NEW_VALUE}</code>. The minimal value is <code>10</code> and the maximum value is <code>300</code>. The unit of this value is <code>sec</code>.</p><h3 id="smart-sleep-binary" tabindex="-1"><a class="header-anchor" href="#smart-sleep-binary"><span>Smart sleep (binary)</span></a></h3><p>Enable Smart Sleep, short wakeup every 7 seconds. Value can be found in the published state on the <code>smart_sleep</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;smart_sleep&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> smart sleep is ON, if <code>OFF</code> OFF.</p><h3 id="config-report-enable-binary" tabindex="-1"><a class="header-anchor" href="#config-report-enable-binary"><span>Config report enable (binary)</span></a></h3><p>Enable reporting based on reporting configuration. Value can be found in the published state on the <code>config_report_enable</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;config_report_enable&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> config report enable is ON, if <code>OFF</code> OFF.</p><h3 id="comparison-previous-data-binary" tabindex="-1"><a class="header-anchor" href="#comparison-previous-data-binary"><span>Comparison previous data (binary)</span></a></h3><p>Enable Ñontrol of comparison with previous data. Value can be found in the published state on the <code>comparison_previous_data</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;comparison_previous_data&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> comparison previous data is ON, if <code>OFF</code> OFF.</p>',34))])}]]),s=JSON.parse('{"path":"/devices/EFEKTA_PST_V1.html","title":"EFEKTA EFEKTA_PST_V1 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"EFEKTA EFEKTA_PST_V1 control via MQTT","description":"Integrate your EFEKTA EFEKTA_PST_V1 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-02-18T14:54:46.000Z"},"headers":[{"level":2,"title":"Options","slug":"options","link":"#options","children":[]},{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Pressure (numeric)","slug":"pressure-numeric","link":"#pressure-numeric","children":[]},{"level":3,"title":"Bar (numeric)","slug":"bar-numeric","link":"#bar-numeric","children":[]},{"level":3,"title":"Psi (numeric)","slug":"psi-numeric","link":"#psi-numeric","children":[]},{"level":3,"title":"Temperature (numeric)","slug":"temperature-numeric","link":"#temperature-numeric","children":[]},{"level":3,"title":"Pressure offset (numeric)","slug":"pressure-offset-numeric","link":"#pressure-offset-numeric","children":[]},{"level":3,"title":"Raw temperature calibration (numeric)","slug":"raw-temperature-calibration-numeric","link":"#raw-temperature-calibration-numeric","children":[]},{"level":3,"title":"Raw temperature (numeric)","slug":"raw-temperature-numeric","link":"#raw-temperature-numeric","children":[]},{"level":3,"title":"Raw temperature recalibrated (numeric)","slug":"raw-temperature-recalibrated-numeric","link":"#raw-temperature-recalibrated-numeric","children":[]},{"level":3,"title":"Battery (numeric)","slug":"battery-numeric","link":"#battery-numeric","children":[]},{"level":3,"title":"Voltage (numeric)","slug":"voltage-numeric","link":"#voltage-numeric","children":[]},{"level":3,"title":"Battery low (binary)","slug":"battery-low-binary","link":"#battery-low-binary","children":[]},{"level":3,"title":"Uptime (numeric)","slug":"uptime-numeric","link":"#uptime-numeric","children":[]},{"level":3,"title":"Reading interval (numeric)","slug":"reading-interval-numeric","link":"#reading-interval-numeric","children":[]},{"level":3,"title":"Smart sleep (binary)","slug":"smart-sleep-binary","link":"#smart-sleep-binary","children":[]},{"level":3,"title":"Config report enable (binary)","slug":"config-report-enable-binary","link":"#config-report-enable-binary","children":[]},{"level":3,"title":"Comparison previous data (binary)","slug":"comparison-previous-data-binary","link":"#comparison-previous-data-binary","children":[]}]}],"git":{"updatedTime":1741602197000},"filePathRelative":"devices/EFEKTA_PST_V1.md"}')}}]);